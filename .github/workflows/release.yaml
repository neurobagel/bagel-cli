name: auto release

on:
  push:
    branches:
      - main

jobs:
  auto-release:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci')"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download latest auto
        run: |
          auto_download_url="$(curl -fsSL https://api.github.com/repos/intuit/auto/releases/latest | jq -r '.assets[] | select(.name == "auto-linux.gz") | .browser_download_url')"
          wget -O- "$auto_download_url" | gunzip > ~/auto
          chmod a+x ~/auto

      - name: Release
        run: ~/auto shipit -vv
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get the new release version
        id: get_version
        run: echo "RELEASE_VERSION=$(~/auto version)" >> $GITHUB_ENV

      # Starting the Docker release process
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and push
        uses: docker/build-push-action@v5
        env:
          RELEASE_VERSION: ${{ steps.get_version.outputs.RELEASE_VERSION }}
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bagelcli:stable, ${{ secrets.DOCKERHUB_USERNAME }}/bagelcli:${ RELEASE_VERSION }
