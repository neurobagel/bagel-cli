from pathlib import Path
from typing import Iterable

import typer
from pydantic import ValidationError

from bagel import models


def get_subjects_missing_from_pheno_data(
    subjects: Iterable, pheno_subjects: Iterable
) -> list:
    """Check a list of subject IDs and return any not found in the provided phenotypic subject list."""
    return list(set(subjects).difference(pheno_subjects))


# TODO: Test error message?
def validate_jsonld_against_model(
    jsonld: dict, file_path: Path
) -> models.Dataset:
    """Validate dictionary of user-provided JSONLD against the data model for a dataset."""
    try:
        jsonld_dataset = models.Dataset.parse_obj(jsonld)
    except ValidationError as err:
        typer.echo(
            typer.style(
                (
                    f"Error: {file_path} is not a valid Neurobagel JSONLD dataset. "
                    "Please ensure to provide a valid JSONLD file generated by Neurobagel CLI commands.\n"
                    f"Validation errors: {str(err)}"
                ),
                fg=typer.colors.RED,
            ),
            err=True,
        )
        raise typer.Exit(code=1) from err

    return jsonld_dataset
